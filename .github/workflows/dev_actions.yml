name: Dev .NET

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      #run: dotnet test --no-build --verbosity normal --logger trx --results-directory "TestResults" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      run: dotnet test --no-restore --verbosity normal --logger trx --results-directory "TestResults" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
    - name: Upload coverage reports to Codecov
      if: always()
      uses: codecov/codecov-action@v4.0.1
      with:
       fail_ci_if_error: false
       flags: unittests # optional
       name: codecov-umbrella
       verbose: true
       token: ${{ secrets.CODECOV_TOKEN }}
    - name: Publish Test
      if: always()
      uses: dorny/test-reporter@v1.6.0 
      with:
        name: Test results on branch dev
        path: ./TestResults/*.trx
        reporter: dotnet-trx
    - name: Create Issue
      if: failure()
      uses: JasonEtco/create-an-issue@v2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          filename: .github/ISSUE_TEMPLATE/custom.md
          assignees: blazovics 
    - name: Pull request
      uses: repo-sync/pull-request@v2
      with:
        destination_branch: "main"
        github_token: ${{secrets.GITHUB_TOKEN}}
   
       
